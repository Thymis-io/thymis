{
	"language": {
		"select": "Select Language",
		"en": "English",
		"de": "Deutsch"
	},
	"nav": {
		"overview": "Overview",
		"configure": "Configure",
		"config-tag": "Configure Tag",
		"configurations": "Configurations",
		"devices": "Devices",
		"hardware-devices": "Hardware Devices",
		"history": "History",
		"terminal": "Terminal",
		"global-vnc": "VNC All Devices",
		"device-vnc": "VNC",
		"external-repositories": "External Repositories",
		"tags": "Tags",
		"device-details": "Details"
	},
	"common": {
		"search": "Search...",
		"save": "Save",
		"cancel": "Cancel",
		"no-tag-or-device-selected": "No tag or device selected",
		"logout": "Logout",
		"documentation": "Documentation",
		"github": "GitHub",
		"website": "Homepage"
	},
	"vnc": {
		"connection-failed": "Connection failed",
		"control-device": "Control Device",
		"column-count": "Displays per Row:"
	},
	"configurations": {
		"title": "Device Configurations",
		"details-title": "Configuration",
		"create-new": "Create New Configuration ({deviceCount}/{deviceLimit})",
		"table": {
			"name": "Name",
			"target-host": "Target Host",
			"tags": "Tags",
			"actions": "Actions",
			"status": "Status"
		},
		"actions": {
			"edit": "Edit Modules",
			"download": "Download  Image",
			"restart": "Restart",
			"delete": "Delete",
			"view-details": "View Details",
			"download-image-tooltip": "Download the device image",
			"restart-tooltip": "Restart the device"
		},
		"status": {
			"online": "Online",
			"offline": "Offline"
		},
		"edit-name-title": "Edit Name",
		"edit-hostname-title": "Edit target hostname",
		"edit-tags-title": "Edit Tags",
		"new-tag-placeholder": "New Tag...",
		"unknown-target": "Unknown Target",
		"limit-explain": "You can manage up to {deviceLimit} configurations.\nFor larger projects, we offer scalable plans to meet your needs at thymis.io/"
	},
	"hardware-devices": {
		"table": {
			"configuration-name": "Deployed Configuration",
			"hardware-ids": "Hardware IDs",
			"reachable-deployed-host": "Target Host",
			"device-type": "Device Type",
			"ssh-public-key": "Public SSH Key",
			"deployed-config-commit": "Config Commit"
		},
		"hardware-keys": {
			"pi-serial-number": "Pi Serial Number"
		}
	},
	"create-configuration": {
		"title": "Create a new device configuration",
		"next": "Next →",
		"back": "← Back",
		"step-1": {
			"title": "Install Thymis",
			"info": "You can easily create an ISO file or a system image for your IoT device."
		},
		"step-2": {
			"title": "Select device"
		},
		"step-3": {
			"title": "Connection information"
		},
		"step-4": {
			"title": "Here we go!"
		},
		"finish": {
			"title": {
				"generating": "We create your personal system image from Thymis.",
				"generated": "Your system image is ready!"
			},
			"download": "Download image",
			"new": "Create another image",
			"next-steps": {
				"generating": "You can do this in the meantime",
				"generated": "These are the next steps"
			},
			"sd-title": "Prepare a data carrier",
			"sd-info": "Prepare a suitable data carrier for your device. USB sticks or CDs/DVDs are usually used for ISOs. For system images as .img, a data carrier such as a microSD card is recorded with the system.",
			"sd-size-warning": "The data carrier must be able to hold at least 4 GB.",
			"software-title": {
				"generating": "Install software for imaging",
				"generated": "Copy system image to data carriers"
			},
			"software-info": "The system image must be installed on the data carrier. We will give you several recommendations on how to do this.",
			"software-warning": "The data carrier will be formatted when writing to it. All data will be deleted!",
			"software-permissions": "You need superuser/root/administrator rights for this step.",
			"software-windows": {
				"install": "Install {balena}. After installation, you can select the image file and a disc to write to."
			},
			"software-macos": {
				"step-1": "1. display your connected devices and identify the device with /dev/diskX, which stands for your desired data carrier.",
				"step-2": "2. remove the disc from your file system (unmount) if you have not already done so.",
				"step-3": "3. overwrite the data carrier with the system image using Thymis. The data carrier will be completely overwritten."
			},
			"software-linux": {
				"step-1": "1. display your connected devices and identify the device with /dev/sdX, which stands for your desired data carrier.",
				"step-2": "2. remove the data carrier from your file system (unmount) if you have not already done so.",
				"step-3": "3. overwrite the data carrier with the system image using Thymis. The data carrier will be completely overwritten."
			}
		},
		"create": "Create device configuration",
		"name-helper": "Device will be called {identifier} internally.",
		"name-helper-tag": "Tag will be called {identifier} internally.",
		"display-name": "Display name - How the device configuration will be displayed in the UI - Required",
		"display-name-cannot-be-empty": "Display name cannot be empty.",
		"display-name-tag": "Display name - How the tag will be displayed in the UI",
		"identifier-exists": "Identifier already exists.",
		"device-type": "Device type - What type of hardware device is this? - Required",
		"tags": "Device tags - What tags should be assigned to this device?",
		"no-tags": "Your project has no tags yet, so you can't assign any to this device configuration.",
		"device-type-cannot-be-empty": "Device type cannot be empty.",
		"device-with-display-name-name-exists": "Device configuration with display name \"{displayName}\" already exists in project.",
		"tag-with-display-name-name-exists": "Tag with display name \"{displayName}\" already exists in project."
	},
	"history": {
		"open-diff": "Show Changes",
		"revert-commit": "Revert to this state",
		"revert-commit-button": "Revert",
		"no-revert": "Already at this state",
		"rollback-modal-title": "Revert commit",
		"rollback-modal-body": "This will discard all uncommitted changes and create a new commit with the state of the selected commit.\n\n{newCommit}\n\nAre you sure you want to continue?",
		"rollback-modal-confirm": "Revert"
	},
	"deploy": {
		"build": "Build",
		"deploy": "Deploy",
		"update": "Update",
		"build-status": "Build Status: {status}",
		"stdout": "Standard Output",
		"stderr": "Standard Error",
		"error-lines": "Error Lines",
		"raw-output": "Full Output",
		"summary": "Summary"
	},
	"overview": {
		"devices": "Devices ({count})",
		"tags": "Tags ({count})",
		"modules": "Modules ({count})"
	},
	"taskbar": {
		"pending": "Pending",
		"running": "Running",
		"completed": "Completed",
		"failed": "Failed",
		"latest-task": "Latest Task",
		"start-time": "Start Time",
		"end-time": "End Time",
		"task-type": "Name",
		"status": "Status",
		"actions": "Actions",
		"cancel": "Cancel",
		"retry": "Retry",
		"details": "View",
		"task-types": {
			"project_flake_update": "Update Nix Flake",
			"build_project": "Build Project",
			"deploy_devices": "Deploy Devices",
			"deploy_device": "Deploy Device {device}",
			"build_device_image": "Build Device Image {device}",
			"ssh_command": "Run SSH Command"
		}
	},
	"config": {
		"header": {
			"tag-overview": "Manage modules for {tag}",
			"device-overview": "Manage modules for {device}",
			"overview": "Manage modules",
			"tag-module": "Manage {module} for {tag}",
			"device-module": "Manage {module} for {device}",
			"module": "Manage {module}"
		},
		"section": {
			"installed": "Installed",
			"installed-elsewhere": "Installed on other tags or devices",
			"available": "Available"
		},
		"add_list_element": "Add List Element",
		"remove_list_element": "Remove List Element",
		"add-element": "Add {element}",
		"remove-element": "Remove {element}",
		"add_module": "Add Module",
		"remove_module": "Remove Module",
		"edit_tag_modules": "Edit Tag Modules",
		"clear": "Clear",
		"edit": "Edit",
		"copy": "Copy",
		"paste": "Paste",
		"install": "Install",
		"uninstall": "Uninstall",
		"configure": "Configure",
		"back": "Back",
		"notPassed": "This definition is <b>not</b> passed to the device",
		"passed": "This definition is passed to the device",
		"notSet": "No definition set",
		"otherDefinitions": "Other definitions:",
		"noOtherDefinitions": "No other definitions",
		"overwrittenBy": "Overwritten by:",
		"priority": "Priority {priority}",
		"editDisabled": "Editing disabled",
		"no-settings": "No settings found for this module"
	},
	"settings": {
		"repo": {
			"title": "Repositories",
			"name": "Name",
			"url": "URL",
			"actions": "Actions",
			"edit-name": "Edit Name",
			"edit-url": "Edit URL",
			"delete": "Delete"
		}
	},
	"tags": {
		"actions": {
			"edit": "Configure Tag",
			"delete": "Delete",
			"add": "Add Tag",
			"create": "Create Tag"
		},
		"table": {
			"name": "Name",
			"devices": "Devices",
			"actions": "Actions"
		},
		"devices": "Devices",
		"details-title": "Tag"
	},
	"deleteConfirm": {
		"title": "Delete {target}",
		"text": "Are you sure you want to delete {target}?",
		"confirm": "Delete",
		"cancel": "Cancel"
	},
	"tag": {
		"device": "Device"
	},
	"configuration-details": {
		"network": "Network",
		"targetHost": "Target Host",
		"deployed-at": "Deployed",
		"tags": "Tags",
		"config": "Configuration",
		"actions": "Actions",
		"danger": "Danger",
		"modules": "Modules",
		"hostkey": "Hostkey",
		"deployment-info": "Deployment Info",
		"publicKey": "Public Key",
		"edit-hostkey": "Edit Hostkey",
		"add-hostkey": "Set Hostkey",
		"refresh-hostkey": "Refresh Hostkey",
		"delete-hostkey": "Delete Hostkey",
		"edit-tags": "Edit Tags",
		"no-deployment-info": "Not deployed on any devices",
		"no-commit": "No commit info"
	},
	"edit-hostkey": {
		"title": "Edit Hostkey",
		"device-host": "Device Target Host",
		"host-empty": "Host required",
		"host-invalid": "Host is invalid",
		"host-valid": "Host is valid",
		"public-key": "Device Public Key",
		"scan-public-key": "Scan For Public Key",
		"scan-public-key-tooltip": "Automatically scan for the public key of the device in the network. Uses the specified target host from above.\nVerify if the key is correct afterwards",
		"update": "Update",
		"create": "Create"
	}
}
