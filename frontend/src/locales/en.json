{
	"language": {
		"select": "Select Language",
		"en": "English",
		"de": "Deutsch"
	},
	"nav": {
		"overview": "Overview",
		"config-device": "Configure Device",
		"config-tag": "Configure Tag",
		"devices": "Devices",
		"history": "History",
		"terminal": "Terminal",
		"global-vnc": "VNC All Devices",
		"device-vnc": "VNC",
		"settings": "Settings"
	},
	"common": {
		"search": "Search...",
		"save": "Save",
		"cancel": "Cancel",
		"no-tag-or-device-selected": "No tag or device selected"
	},
	"vnc": {
		"connection-failed": "Connection failed",
		"control-device": "Control Device"
	},
	"devices": {
		"create-new": "Create New Device",
		"table": {
			"name": "Name",
			"target-host": "Hostname",
			"tags": "Tags",
			"actions": "Actions",
			"status": "Status"
		},
		"actions": {
			"edit": "Edit",
			"download": "Download Image",
			"restart": "Restart",
			"delete": "Delete"
		},
		"status": {
			"online": "Online",
			"offline": "Offline"
		},
		"edit-name-title": "Edit Name",
		"edit-hostname-title": "Edit target hostname",
		"edit-tags-title": "Edit Tags",
		"new-tag-placeholder": "New Tag..."
	},
	"create-device": {
		"title": "Create a new device",
		"next": "Next →",
		"back": "← Back",
		"step-1": {
			"title": "Install Thymis",
			"info": "You can easily create an ISO file or a system image for your IoT device."
		},
		"step-2": {
			"title": "Select device",
			"info": "We currently support x86-based and aarch64/ARM64-based devices. These include the Raspberry Pi 4 and 5, as well as normal desktop computers."
		},
		"step-3": {
			"title": "Connection information",
			"info": "Once Thymis is installed, you can easily set up much more. Firstly, enter the necessary connection information so that you can reach the device after the automatic installation.",
			"device-name": "Name",
			"hostname": "Hostname",
			"wlan": "Wireless Network",
			"wlan-ssid": "WLAN SSID - name of the WLAN connection",
			"wlan-password": "WLAN password",
			"static-network": "Static Network (if not using DHCP)",
			"static-network-ip": "Static IP address",
			"static-network-prefix": "Subnet mask",
			"ssh-pubkey": "SSH Public-Key"
		},
		"step-4": {
			"title": "Here we go!",
			"info": "Press Generate to create the system image",
			"complete": "Generate"
		},
		"finish": {
			"title": {
				"generating": "We create your personal system image from Thymis.",
				"generated": "Your system image is ready!"
			},
			"download": "Download image",
			"new": "Create another image",
			"next-steps": {
				"generating": "You can do this in the meantime",
				"generated": "These are the next steps"
			},
			"sd-title": "Prepare a data carrier",
			"sd-info": "Prepare a suitable data carrier for your device. USB sticks or CDs/DVDs are usually used for ISOs. For system images as .img, a data carrier such as a microSD card is recorded with the system.",
			"sd-size-warning": "The data carrier must be able to hold at least 4 GB.",
			"software-title": {
				"generating": "Install software for imaging",
				"generated": "Copy system image to data carriers"
			},
			"software-info": "The system image must be installed on the data carrier. We will give you several recommendations on how to do this.",
			"software-warning": "The data carrier will be formatted when writing to it. All data will be deleted!",
			"software-permissions": "You need superuser/root/administrator rights for this step.",
			"software-windows": {
				"install": "Install {balena}. After installation, you can select the image file and a disc to write to."
			},
			"software-macos": {
				"step-1": "1. display your connected devices and identify the device with /dev/diskX, which stands for your desired data carrier.",
				"step-2": "2. remove the disc from your file system (unmount) if you have not already done so.",
				"step-3": "3. overwrite the data carrier with the system image using Thymis. The data carrier will be completely overwritten."
			},
			"software-linux": {
				"step-1": "1. display your connected devices and identify the device with /dev/sdX, which stands for your desired data carrier.",
				"step-2": "2. remove the data carrier from your file system (unmount) if you have not already done so.",
				"step-3": "3. overwrite the data carrier with the system image using Thymis. The data carrier will be completely overwritten."
			}
		}
	},
	"deploy": {
		"build": "Build",
		"deploy": "Deploy",
		"last-5-tasks": "Last 5 tasks",
		"update": "Update",
		"build-status": "Build Status: {status}",
		"stdout": "Standard Output",
		"stderr": "Standard Error",
		"error-lines": "Error Lines",
		"raw-output": "Full Output",
		"summary": "Summary"
	},
	"overview": {
		"devices": "Devices ({count})",
		"tags": "Tags ({count})",
		"modules": "Modules ({count})"
	},
	"config": {
		"header": {
			"tag-overview": "Manage modules for {tag}",
			"device-overview": "Manage modules for {device}",
			"overview": "Manage modules",
			"tag-module": "Manage {module} for {tag}",
			"device-module": "Manage {module} for {device}",
			"module": "Manage {module}"
		},
		"section": {
			"installed": "Installed",
			"installed-elsewhere": "Installed on other tags or devices",
			"available": "Available"
		},
		"add_module": "Add Module",
		"remove_module": "Remove Module",
		"edit_tag_modules": "Edit Tag Modules",
		"clear": "Clear",
		"edit": "Edit",
		"install": "Install",
		"uninstall": "Uninstall",
		"configure": "Configure",
		"back": "Back",
		"notPassed": "This definition is <b>not</b> passed to the device",
		"passed": "This definition is passed to the device",
		"notSet": "No definition set",
		"otherDefinitions": "Other definitions:",
		"noOtherDefinitions": "No other definitions",
		"overwrittenBy": "Overwritten by:",
		"priority": "Priority {priority}",
		"editDisabled": "Reference only, edit the tag to change values globally"
	},
	"options": {
		"no-settings": "No settings found for this module",
		"nix": {
			"thymis": {
				"config": {
					"repo-dir": "Repository Directory",
					"device-type": "Device Type",
					"device-type-options": {
						"generic-x86_64": "Generic x86 Device (e.g. PC)",
						"raspberry-pi-3": "Raspberry Pi 3",
						"raspberry-pi-4": "Raspberry Pi 4",
						"raspberry-pi-5": "Raspberry Pi 5",
						"generic-aarch64": "Generic ARM64 Device"
					},
					"device-name": "Device Name",
					"password": "Password",
					"wifi-ssid": "WiFi SSID",
					"wifi-password": "WiFi Password"
				}
			},
			"freeform": {
				"settings": "Settings"
			},
			"kiosk": {
				"url": "URL"
			},
			"services": {
				"minio": {
					"enable": "Enable Minio",
					"secretKey": "Secret Key",
					"rootCredentialsFile": "Root Credentials File",
					"region": "Region",
					"package": "Package",
					"listenAddress": "Listen Address",
					"dataDir": "Data Directory",
					"consoleAddress": "Console Address",
					"configDir": "Configuration Directory",
					"browser": "Browser",
					"accessKey": "Access Key"
				},
				"node-red": {
					"enable": "Enable Node-RED"
				}
			}
		}
	},
	"settings": {
		"repo": {
			"title": "Repositories",
			"name": "Name",
			"url": "URL",
			"actions": "Actions",
			"edit-name": "Edit Name",
			"edit-url": "Edit URL",
			"delete": "Delete"
		}
	}
}
