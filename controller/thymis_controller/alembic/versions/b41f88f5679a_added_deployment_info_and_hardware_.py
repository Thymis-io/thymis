"""added deployment_info and hardware_device

Revision ID: b41f88f5679a
Revises: 44aeb6abdcab
Create Date: 2024-12-18 02:05:04.287386

"""
import uuid

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = "b41f88f5679a"
down_revision = "44aeb6abdcab"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    deployment_info = op.create_table(
        "deployment_info",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("ssh_public_key", sa.String(), nullable=False),
        sa.Column("deployed_config_commit", sa.String(), nullable=True),
        sa.Column("deployed_config_id", sa.String(), nullable=True),
        sa.Column("reachable_deployed_host", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_deployment_info_id"), "deployment_info", ["id"], unique=False
    )
    op.create_table(
        "hardware_devices",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("hardware_ids", sa.JSON(), nullable=False),
        sa.Column("deployment_info_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["deployment_info_id"],
            ["deployment_info.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_hardware_devices_id"), "hardware_devices", ["id"], unique=False
    )
    op.drop_index("ix_images_id", table_name="images")
    op.drop_table("images")
    # ### end Alembic commands ###

    conn = op.get_bind()
    res = conn.execute(
        sa.text("SELECT identifier, public_key, device_host FROM hostkeys")
    )
    results = res.fetchall()
    hostkey_data = [
        {
            "id": uuid.uuid4(),
            "deployed_config_id": identifier,
            "ssh_public_key": public_key,
            "reachable_deployed_host": device_host,
        }
        for identifier, public_key, device_host in results
    ]
    op.bulk_insert(deployment_info, hostkey_data)
    op.drop_index("ix_hostkeys_identifier", table_name="hostkeys")
    op.drop_table("hostkeys")


def downgrade():
    hostkeys = op.create_table(
        "hostkeys",
        sa.Column("identifier", sa.String(), nullable=False),
        sa.Column("build_hash", sa.String(), nullable=True),
        sa.Column("public_key", sa.String(), nullable=True),
        sa.Column("device_host", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("identifier"),
    )
    op.create_index(
        op.f("ix_hostkeys_identifier"), "hostkeys", ["identifier"], unique=False
    )

    conn = op.get_bind()
    res = conn.execute(
        sa.text(
            "SELECT ssh_public_key, deployed_config_id, reachable_deployed_host FROM deployment_info"
        )
    )
    results = res.fetchall()
    deployment_info_data = [
        {
            "identifier": deployed_config_id,
            "public_key": ssh_public_key,
            "device_host": reachable_deployed_host,
        }
        for ssh_public_key, deployed_config_id, reachable_deployed_host in results
    ]
    op.bulk_insert(hostkeys, deployment_info_data)
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "images",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("identifier", sa.VARCHAR(), nullable=True),
        sa.Column("build_hash", sa.VARCHAR(), nullable=True),
        sa.Column("commit_hash", sa.VARCHAR(), nullable=True),
        sa.Column("device_state", sqlite.JSON(), nullable=True),
        sa.Column("valid", sa.BOOLEAN(), nullable=True),
        sa.Column("created_at", sa.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_images_id", "images", ["id"], unique=False)
    op.drop_index(op.f("ix_hardware_devices_id"), table_name="hardware_devices")
    op.drop_table("hardware_devices")
    op.drop_index(op.f("ix_deployment_info_id"), table_name="deployment_info")
    op.drop_table("deployment_info")
    # ### end Alembic commands ###
