"""change-session-id-to-native-uuid

Revision ID: cf011834f9aa
Revises: bc8f00254345
Create Date: 2025-02-09 22:02:53.434583

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "cf011834f9aa"
down_revision = "bc8f00254345"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.add_column('sessions', sa.Column('session_token', sa.String(), nullable=False))
    # op.alter_column('sessions', 'id',
    #            existing_type=sa.INTEGER(),
    #            type_=sa.Uuid(),
    #            existing_nullable=False)
    # op.alter_column('sessions', 'created_at',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.create_unique_constraint(None, 'sessions', ['session_token'])
    # op.drop_column('sessions', 'session_id')
    # op.drop_column('sessions', 'updated_at')
    # first, drop old table
    op.drop_index(op.f("ix_sessions_id"), table_name="sessions")
    op.drop_table("sessions")
    # then, create new table
    op.create_table(
        "sessions",
        sa.Column("id", sa.Uuid(as_uuid=True), nullable=False),
        sa.Column("session_token", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("session_token"),
    )
    op.create_index(op.f("ix_sessions_id"), "sessions", ["id"], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.add_column('sessions', sa.Column('updated_at', sa.DATETIME(), nullable=True))
    # op.add_column('sessions', sa.Column('session_id', sa.VARCHAR(), nullable=True))
    # op.drop_constraint(None, 'sessions', type_='unique')
    # op.alter_column('sessions', 'created_at',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('sessions', 'id',
    #            existing_type=sa.Uuid(),
    #            type_=sa.INTEGER(),
    #            existing_nullable=False)
    # op.drop_column('sessions', 'session_token')
    # first, drop new table
    op.drop_index(op.f("ix_sessions_id"), table_name="sessions")
    op.drop_table("sessions")
    # then, create old table
    op.create_table(
        "sessions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("session_id"),
    )
    op.create_index(op.f("ix_sessions_id"), "sessions", ["id"], unique=False)

    # ### end Alembic commands ###
