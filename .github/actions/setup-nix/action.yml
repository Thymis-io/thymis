name: "Setup Nix"
description: "Installs Nix with extra configuration."
inputs:
  attic_token:
    description: "The token to use for authenticating with the Attic cache."
    required: false
    default: ""
  github_token:
    description: "The GitHub token to use for authenticating with the GitHub API."
    required: false
    default: ""
  extra_nix_config:
    description: "Extra Nix configuration to use."
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Install Nix
      uses: cachix/install-nix-action@v30
      with:
        github_access_token: ${{ inputs.GITHUB_TOKEN }}
        extra_nix_config: |
          system-features = kvm
          extra-trusted-public-keys = cache.thymis.io-1:pEeKkNXiK17TLKls0KM8cEp0NGy08gc5chAmCyuQo8M=
          extra-substituters = https://cache.thymis.io
          ${{ inputs.extra_nix_config }}
    - if: ${{ inputs.ATTIC_TOKEN != '' }}
      name: Install Attic
      shell: bash
      run: |
        nix profile install nixpkgs#attic-client
        attic login thymis-cache https://attic-cache.thymis.io ${{ inputs.ATTIC_TOKEN }} --set-default
    - if: ${{ inputs.ATTIC_TOKEN == '' }}
      name: Print Attic Token Warning
      shell: bash
      run: echo "ATTIC_TOKEN not set, skipping Attic installation."
# use this magic invocation to push generated and used paths to the cache
# attic watch-store "thymis-cache:public-cache" &
# ATTIC_PID=$!
# trap 'kill $ATTIC_PID' EXIT
# YOUR_NIX_STORE_PATHS_GENERATING_COMMAND_HERE
